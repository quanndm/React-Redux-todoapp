{"version":3,"sources":["store/actions/todoActions.js","helpers/todoHelper.js","store/reducers/todoReducer.js","store/reducers/rootReducer.js","store/index.js","components/Header.jsx","components/Todo.jsx","components/Todolist.jsx","components/Footer.jsx","App.js","index.js"],"names":["ADD_TODO","GET_TODO_EDITING_ID","ON_EDIT_TODO","MARK_COMPLETED","CHECK_ALL_TODOS","REMOVE_TODO","SET_STATUS","CLEAR_COMPLETED","addTodo","todo","type","payload","setStatus","status","isNotCheckAll","find","isCompleted","filterByStatus","todos","id","filter","toString","includes","getItem","JSON","parse","localStorage","initialState","todoList","todoEditingId","isCheckedAll","todoReducer","updateList","obj","state","action","list","stringify","Object","assign","setItem","index","splice","map","combineReducers","createStore","rootReducer","Header","memo","dispatch","useDispatch","useState","text","setText","className","value","onChange","e","target","onKeyPress","key","Date","valueOf","onAddTodo","Todo","props","isEditing","useSelector","editTodo","onEditTodo","checked","markCompleted","onDoubleClick","getTodoEditingId","onClick","removeTodo","Todolist","readOnly","htmlFor","Footer","length","numOfTodos","setNumOfTodos","numOfTodosLeft","setNumOfTodosLeft","useEffect","filterBtns","title","isActived","link","item","FilterBtn","href","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca3f0b88.chunk.js","sourcesContent":["const ADD_TODO=\"ADD_TODO\";\r\nconst GET_TODO_EDITING_ID = \"GET_TODO_EDITING_ID\";\r\nconst ON_EDIT_TODO = \"ON_EDIT_TODO\";\r\nconst MARK_COMPLETED = \"MARK_COMPLETED\";\r\nconst CHECK_ALL_TODOS = \"CHECK_ALL_TODOS\"\r\nconst REMOVE_TODO = \"REMOVE_TODO\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst CLEAR_COMPLETED = \"CLEAR_COMPLETED\"\r\nconst addTodo = (todo = {})=>{\r\n    return{\r\n        type: ADD_TODO,\r\n        payload: todo\r\n    }\r\n}\r\nconst getTodoEditingId = (id = \"\")=>{\r\n    return{\r\n        type: GET_TODO_EDITING_ID,\r\n        payload: id\r\n    }\r\n}\r\nconst onEditTodo = (todo={}, index=-1)=>{\r\n    return{\r\n        type: ON_EDIT_TODO,\r\n        payload: {todo, index}\r\n    }\r\n}\r\nconst markCompleted = (id=\"\")=>{\r\n    return{\r\n        type: MARK_COMPLETED,\r\n        payload: id\r\n    }\r\n}\r\nconst checkAllTodos = () => {\r\n    return {\r\n        type: CHECK_ALL_TODOS\r\n    }\r\n}\r\nconst removeTodo = (id=\"\")=>{\r\n    return {\r\n        type: REMOVE_TODO,\r\n        payload: id\r\n    }\r\n}\r\nconst setStatus = (status = \"\")=>{\r\n    return{\r\n        type: SET_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nconst clearCompleted = ()=>{\r\n    return{\r\n        type: CLEAR_COMPLETED\r\n    }\r\n}\r\nexport {ADD_TODO, GET_TODO_EDITING_ID, ON_EDIT_TODO, MARK_COMPLETED, CHECK_ALL_TODOS, REMOVE_TODO, SET_STATUS, CLEAR_COMPLETED}\r\nexport {addTodo, getTodoEditingId, onEditTodo, markCompleted, checkAllTodos, removeTodo, setStatus, clearCompleted}","const isNotCheckAll = (todo = []) => todo.find(todo => !todo.isCompleted);\r\nconst filterByStatus = (todos = [], status = \"\", id = \"\") => {\r\n  switch (status) {\r\n    case \"ACTIVE\":\r\n      return todos.filter(todo => !todo.isCompleted);\r\n    case \"COMPLETED\":\r\n      return todos.filter(todo => todo.isCompleted);\r\n    case \"REMOVE\":\r\n      return todos.filter(todo => !todo.id.toString().includes(id));\r\n    default:\r\n      return todos\r\n  }\r\n}\r\nexport {isNotCheckAll, filterByStatus}","import {\r\n    ADD_TODO,\r\n    GET_TODO_EDITING_ID,\r\n    ON_EDIT_TODO,\r\n    MARK_COMPLETED,\r\n    CHECK_ALL_TODOS,\r\n    REMOVE_TODO,\r\n    SET_STATUS,\r\n    CLEAR_COMPLETED\r\n} from \"../actions/todoActions\";\r\nimport { isNotCheckAll, filterByStatus } from \"../../helpers/todoHelper\";\r\nconst getItem = JSON.parse(localStorage.getItem(\"todoState\"));\r\nconst initialState = {\r\n    todoList: [],\r\n    todoEditingId: \"\",\r\n    isCheckedAll: false,\r\n    status: \"ALL\"\r\n}\r\nconst todoReducer = (state = getItem ? getItem : initialState, action) => {\r\n    const { todoList, isCheckedAll } = state;\r\n    const list = JSON.parse(JSON.stringify(todoList));\r\n    let updateList;\r\n    let obj;\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            obj = Object.assign({}, state, {\r\n                todoList: [...list, action.payload]\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case GET_TODO_EDITING_ID:\r\n            obj = Object.assign({}, state, {\r\n                todoEditingId: action.payload\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case ON_EDIT_TODO:\r\n            if (action.payload.index >= 0) {\r\n                list.splice(action.payload.index, 1, action.payload.todo);\r\n            }\r\n            obj = Object.assign({}, state, {\r\n                todoList: list,\r\n                todoEditingId: \"\"\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case MARK_COMPLETED:\r\n            updateList = list.map(todo => todo.id === action.payload ? ({ ...todo, isCompleted: !todo.isCompleted }) : todo);\r\n            obj = Object.assign({}, state, {\r\n                todoList: updateList,\r\n                isCheckedAll: !isNotCheckAll(updateList)\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case CHECK_ALL_TODOS:\r\n            updateList = todoList.map(todo => ({ ...todo, isCompleted: !isCheckedAll }));\r\n            obj = Object.assign({}, state, {\r\n                todoList: updateList,\r\n                isCheckedAll: !isCheckedAll\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case REMOVE_TODO:\r\n            obj = Object.assign({}, state, {\r\n                todoList: filterByStatus(list, \"REMOVE\", action.payload),\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case SET_STATUS:\r\n            obj = Object.assign({}, state, {\r\n                status: action.payload\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        case CLEAR_COMPLETED:\r\n            obj = Object.assign({}, state, {\r\n                todoList: filterByStatus(list, \"ACTIVE\")\r\n            });\r\n            localStorage.setItem(\"todoState\", JSON.stringify(obj));\r\n            return obj;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default todoReducer;","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nexport default combineReducers({\r\n    todos: todoReducer\r\n})","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nexport default createStore(rootReducer);","import React, {memo, useState} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../store/actions/todoActions';\r\nconst Header = memo(() => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState(\"\");\r\n    const onAddTodo = (e = {})=>{\r\n        if (e.key === \"Enter\" && text) {\r\n            const todo = {\r\n                id: new Date().valueOf(),\r\n                text,\r\n                isCompleted: false\r\n            }\r\n            dispatch(addTodo(todo));\r\n            setText(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>todos</h1>\r\n            <input type=\"text\"\r\n                value={text} \r\n                className=\"new-todo\" \r\n                onChange={(e)=>setText(e.target.value)}\r\n                onKeyPress={(e)=>onAddTodo(e)}\r\n            />\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header\r\n","import React, { memo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTodoEditingId, onEditTodo, markCompleted, removeTodo } from '../store/actions/todoActions';\r\nconst Todo = memo((props) => {\r\n    const dispatch = useDispatch();\r\n    const { todo, index} = props;\r\n    const todoEditingId = useSelector(state => state.todos.todoEditingId)\r\n    const isEditing = todoEditingId === todo.id;\r\n    const [text, setText] = useState(todo.text);\r\n    const editTodo = ()=>{\r\n        dispatch(onEditTodo({\r\n            ...todo,\r\n            text\r\n        }, index))\r\n    }\r\n    return (\r\n        <li className={`${isEditing && \"editing\"} ${todo.isCompleted && \"completed\"}`}>\r\n            {\r\n                !isEditing\r\n                    ? <div className=\"view\">\r\n                        <input className=\"toggle\" \r\n                            type=\"checkbox\" \r\n                            checked={todo.isCompleted} \r\n                            onChange={()=>{dispatch(markCompleted(todo.id))}}\r\n                        />\r\n                        <label onDoubleClick={()=>dispatch(getTodoEditingId(todo.id))}>{todo.text}</label>\r\n                        <button className=\"destroy\" onClick={()=>dispatch(removeTodo(todo.id))}></button>\r\n                    </div>\r\n                    : <input \r\n                        className='edit' \r\n                        type=\"text\" \r\n                        value={text}\r\n                        onChange={(e)=>{setText(e.target.value)}}\r\n                        onKeyPress={(e)=>{\r\n                            if (e.key === \"Enter\") {\r\n                                editTodo()\r\n                            }\r\n                        }}\r\n                        />\r\n            }\r\n        </li>\r\n    )\r\n})\r\n\r\nexport default Todo\r\n","import React, { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Todo from './Todo'\r\nimport { checkAllTodos } from '../store/actions/todoActions';\r\nimport {filterByStatus} from \"../helpers/todoHelper\";\r\nconst Todolist = memo((props) => {\r\n    const dispatch = useDispatch();\r\n    const {todoList, status} = useSelector(state => state.todos)\r\n    const isCheckedAll = useSelector(state => state.todos.isCheckedAll)\r\n    return (\r\n        <section className=\"main\">\r\n            <input className=\"toggle-all\" type=\"checkbox\" checked={isCheckedAll} readOnly/>\r\n            <label htmlFor=\"toggle-all\" onClick={()=>dispatch(checkAllTodos())}></label>\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filterByStatus(todoList, status).map((todo, index)=>(\r\n                        <Todo key={`todo${todo.id}`} {...{todo}} {...props} index={index}/>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Todolist\r\n","import React, { memo, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { filterByStatus } from \"../helpers/todoHelper\";\r\nimport { setStatus, clearCompleted } from '../store/actions/todoActions';\r\nconst Footer = memo(() => {\r\n    const dispatch = useDispatch();\r\n    const {todoList, status} = useSelector(state=>state.todos)\r\n    const [numOfTodos, setNumOfTodos] = useState(todoList.length);\r\n    const [numOfTodosLeft, setNumOfTodosLeft] = useState(filterByStatus(todoList, \"ACTIVE\").length)\r\n    useEffect(() => {\r\n        setNumOfTodos(todoList.length);\r\n        setNumOfTodosLeft(filterByStatus(todoList, \"ACTIVE\").length)\r\n    },[todoList])\r\n    const filterBtns = [\r\n        {\r\n            title: \"All\",\r\n            isActived: status===\"ALL\",\r\n            onClick: ()=>dispatch(setStatus(\"ALL\")),\r\n            link: \"\"\r\n        },\r\n        {\r\n            title: \"Active\",\r\n            isActived: status === \"ACTIVE\",\r\n            onClick: ()=>dispatch(setStatus(\"ACTIVE\")),\r\n            link: \"/active\"\r\n        },\r\n        {\r\n            title: \"Completed\",\r\n            isActived: status === \"COMPLETED\",\r\n            onClick: ()=>dispatch(setStatus(\"COMPLETED\")),\r\n            link: \"/completed\"\r\n        },\r\n    ]\r\n    \r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\">\r\n                <strong>{numOfTodosLeft}</strong>\r\n                <span> </span>\r\n                <span>{numOfTodosLeft<=1?\"item\":\"items\"}</span>\r\n                <span> left</span>\r\n            </span>\r\n            <ul className=\"filters\">\r\n                {filterBtns.map((item)=>(\r\n                    <FilterBtn \r\n                        key={`btn${item.title}`} \r\n                        {...item}\r\n                    />\r\n                ))}\r\n            </ul>\r\n            {\r\n                numOfTodos>numOfTodosLeft&&<button className=\"clear-completed\" onClick={()=>dispatch(clearCompleted())}>Clear completed</button>\r\n            }\r\n            \r\n        </footer>\r\n    )\r\n})\r\n\r\nconst FilterBtn = memo((props) => {\r\n    const {title, isActived, onClick, link} = props;\r\n    return (\r\n        <>\r\n            <li>\r\n                <a\r\n                    href={`/#${link}`}\r\n                    className={`${isActived ? \"selected\":\"\"}`}\r\n                    onClick={onClick}\r\n                >\r\n                    {title}\r\n                </a>\r\n            </li>\r\n            <span></span>\r\n        </>\r\n    )\r\n})\r\nexport default Footer\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n//component\nimport Header from \"./components/Header\";\nimport Todolist from \"./components/Todolist\";\nimport Footer from \"./components/Footer\";\n// function\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"todoapp\">\n        <Header/>\n        <Todolist/>\n        <Footer/>\n      </div>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}